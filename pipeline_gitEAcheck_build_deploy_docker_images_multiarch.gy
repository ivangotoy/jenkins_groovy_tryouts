// -- README:
// -- RTFM:
// -- https://digtvbg.com/files/MEDIA/DOCKER-INFO.txt
pipeline {
	agent {
		node {
			label 'ryzen9'
		}
	}

	options {
		timestamps()
	}

	environment {
		GITEA_API_KEY = credentials('gitea_jenkins_api_token')
		GITEA_REPO = 'gitea.com/ivangotoy/docker_images.git'
		registryURL = "digtvbg.com:5000"
		credentialsID = "docker_registry_digtvbg_5000_credentials"
		path1 = "docker_images/openbullet2"
		path2 = "docker_images/quake3e"
		path3 = "docker_images/v2raya"
		path4 = "docker_images/dnscrypt"
		prod1 = "openbullet2:latest"
		prod2 = "quake3e:latest"
		prod3 = "v2raya:latest"
		prod4 = "dnscrypt"
		buildcmd = "docker buildx build -q --no-cache --push --platform linux/amd64,linux/arm64 -t $registryURL/"

	}

	stages {
		stage('Clean WORKSPACE') {
			steps {
				script {
					deleteDir()
				}
			}
		}

		stage('Clone from GITEA') {
			steps {
				sh "git config --global http.postBuffer 157286400"
				sh "git clone --quiet --depth 1 -b main --single-branch https://${GITEA_API_KEY}@${GITEA_REPO}"
			}
		}

		stage('Build and Push MULTIARCH images') {
			steps {
				withCredentials([usernamePassword(credentialsId: credentialsID, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
					sh "echo $PASSWORD | docker login -u $USERNAME --password-stdin $registryURL"
				}

				sh 'docker kill $(docker ps -q) || true'
				sh 'sleep 7'
				sh 'docker rm $(docker ps -a -f status=exited -q) || true'
				sh 'docker system prune -af'
				sh 'docker buildx rm amd64 || true'
				sh 'docker buildx create --bootstrap --platform linux/amd64 --driver-opt image=moby/buildkit:nightly --name amd64 --use'
				sh 'docker buildx prune -f'
				sh '${buildcmd}${prod1} $path1'
				sh '${buildcmd}${prod2} $path2'
				sh '${buildcmd}${prod3} $path3'
				sh '${buildcmd}${prod4} $path4'
			}
		}
	}
}
